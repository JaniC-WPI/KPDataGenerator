<launch>
    <arg name="initial_reset" default="true"/>
     <!-- Launch camera -->
   <!-- <include file="$(find encoderless_vs)/launch/rs_encoderless.launch"/> -->
    <include file="$(find realsense2_camera)/launch/rs_aligned_depth.launch"/>
    <!-- <include file="$(find encoderless_vs)/launch/rs_encoderless_old.launch">
        <arg name ="initial_reset" value="$(arg initial_reset)"/>
    </include> -->

    <!-- Load parameters -->
    
    <node name="set_auto_exposure_rgb" pkg="dynamic_reconfigure" type="dynparam" args="set /camera/rgb_camera enable_auto_exposure False"/>
    <!-- <node name="set_white_balance_rgb" pkg="dynamic_reconfigure" type="dynparam" args="set /camera/rgb_camera enable_auto_white_balance False"/> -->
    <!-- <node name="set_exposure_rgb" pkg="dynamic_reconfigure" type="dynparam" args="set /camera/rgb_camera exposure 166"/> -->
    <!-- <node name="set_auto_exposure_depth" pkg="dynamic_reconfigure" type="dynparam" args="set /camera/stereo_module enable_auto_exposure False"/> -->



    <!-- Node to move the joints in different angles -->
    <node name="franka_velocity" pkg="encoderless_vision_dl" type="franka_vel_pub_test.py" output="screen" respawn="false" />
    <node name="projection_node" pkg="encoderless_vision_dl" type="kp_detection_full.py" output="screen" respawn="false" />
    <!-- <node name="kalmanfilter_class" pkg="encoderless_vs" type="kalmanfilter.py" output="screen" respawn="false" /> -->
   

    <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    	<remap from="image" to="/camera/color/image_raw" />

    </node>   
</launch>